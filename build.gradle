plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.github.drednote'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

bootJar.enabled = false

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    nexusRepo = System.getProperty("NEXUS_REPO") ?: NEXUS_REPO
    nexusRepoSnap = System.getProperty("NEXUS_REPO_SNAPSHOTS") ?: NEXUS_REPO_SNAPSHOTS
    nexusUser = System.getProperty("NEXUS_USER") ?: NEXUS_USER
    nexusPassword = System.getProperty("NEXUS_PASSWORD") ?: NEXUS_PASSWORD
}

repositories {
    mavenCentral()
    maven {
        name "nexus"
        url nexusRepo
        allowInsecureProtocol true
        credentials {
            username nexusUser
            password nexusPassword
        }
    }
    maven {
        name "nexus-snap"
        url nexusRepoSnap
        allowInsecureProtocol true
        credentials {
            username nexusUser
            password nexusPassword
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    api 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    api "org.springframework.cloud:spring-cloud-starter-openfeign"

    api 'org.telegram:telegrambots:6.5.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.3"
    }
    resolutionStrategy {
        cacheDynamicVersionsFor 5, 'minutes'
        cacheChangingModulesFor 0, 'minutes'
    }
}

tasks.register('sourceJar', Jar) {
    from sourceSets.main.allJava
}

publishing {
    repositories {
        maven {
            url System.getProperty("NEXUS_UPLOAD_REPO") ?: NEXUS_UPLOAD_REPO
            allowInsecureProtocol true
            credentials {
                username System.getProperty("NEXUS_USER") ?: NEXUS_USER
                password System.getProperty("NEXUS_PASSWORD") ?: NEXUS_PASSWORD
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            groupId group
            artifactId archivesBaseName
            version System.getProperty("generatedVersion") ?: "local"

            from components.java
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

test {
    useJUnitPlatform()
}
